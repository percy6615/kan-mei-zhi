<?xml version="1.0" encoding="UTF-8"?>
<project name="KanMeiZhi" default="all" basedir=".">
	<description>
        This script will build the L1J server.

        This program is free software; you can redistribute it and/or modify
        it under the terms of the GNU General Public License as published by
        the Free Software Foundation; either version 2, or (at your option)
        any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
        02111-1307, USA.

        http://www.gnu.org/copyleft/gpl.html

    </description>

	<!-- 相关资料目录 -->
	<property name="class.dir" value="bin" />
	<property name="server.src.dir" value="src" />
	<property name="l1jconfig.dir" value="l1jconfig" />
	<property name="lib.dir" value="lib" />
	<property name="etc.dir" value="config" />

	<!-- 封装档案名称 -->
	<property name="server.jar.file" value="l1jserver.jar" />
	<property name="loader.jar.file" value="l1jloader.jar" />
	<property name="l1jconfig.jar.file" value="l1jconfig.jar" />

	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- 在 mf 档内设定相关 class path -->
	<pathconvert property="mf.classpath" pathsep=" ">
		<path refid="classpath" />
		<mapper>
			<chainedmapper>
				<flattenmapper />
				<globmapper from="*" to="${lib.dir}/*" />
			</chainedmapper>
		</mapper>
	</pathconvert>

	<!-- 设定主要任务 -->
	<target name="all" depends="清除,编译server,封装jar(server),清除,编译l1jconfig,封装jar(l1jconfig)" />
	<target name="mini" depends="清除,最简编译server,封装jar(server),清除,最简编译l1jconfig,封装jar(l1jconfig)" />

	<!-- 清除既有的编译档案 -->
	<target name="清除">
		<delete dir="${class.dir}" />
	</target>

	<!-- Server 完整编译(包含除错讯息) -->
	<target name="编译server">
		<mkdir dir="${class.dir}" />
		<javac includeantruntime="true" debug="on" optimize="true" deprecation="true" source="1.7" target="1.7" encoding="UTF-8" destdir="${class.dir}">
			<src path="${server.src.dir}" />
			<classpath refid="classpath" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<!-- Server 最简编译(不包含任何除错讯息) -->
	<target name="最简编译server">
		<mkdir dir="${class.dir}" />
		<javac includeantruntime="true" debug="off" optimize="true" deprecation="true" source="1.7" target="1.7" encoding="UTF-8" destdir="${class.dir}">
			<src path="${server.src.dir}" />
			<classpath refid="classpath" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<!-- l1jconfig 完整编译(包含除错讯息) -->
	<target name="编译l1jconfig">
		<mkdir dir="${class.dir}" />
		<javac includeantruntime="true" debug="on" optimize="true" deprecation="true" source="1.7" target="1.7" encoding="UTF-8" destdir="${class.dir}">
			<src path="${l1jconfig.dir}" />
			<classpath refid="classpath" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<!-- l1jconfig 最简编译(不包含任何除错讯息) -->
	<target name="最简编译l1jconfig">
		<mkdir dir="${class.dir}" />
		<javac includeantruntime="true" debug="off" optimize="true" deprecation="true" source="1.7" target="1.7" encoding="UTF-8" destdir="${class.dir}">
			<src path="${l1jconfig.dir}" />
			<classpath refid="classpath" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<!-- Loader 完整编译(包含除错讯息) -->
	<target name="编译loader" depends="清除">
		<mkdir dir="${class.dir}" />
		<javac includeantruntime="true" debug="on" optimize="true" deprecation="true" source="1.7" target="1.7" encoding="UTF-8" destdir="${class.dir}">
			<src path="${loader.src.dir}" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<!-- 最简编译(不包含任何除错讯息) -->
	<target name="最简编译loader" depends="清除">
		<mkdir dir="${class.dir}" />
		<javac includeantruntime="true" debug="off" optimize="true" deprecation="true" source="1.7" target="1.7" encoding="UTF-8" destdir="${class.dir}">
			<src path="${loader.src.dir}" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<!-- Server 封装成 jar -->
	<target name="封装jar(server)" depends="复制c3p0_config">
		<jar basedir="${class.dir}" jarfile="${server.jar.file}">
			<manifest>
				<attribute name="Class-Path" value="${mf.classpath}" />
				<attribute name="Main-Class" value="com.lineage.Server" />
				<attribute name="Created-By" value="KanMeiZhi Group" />
				<attribute name="Specification-Title" value="Lineage" />
				<attribute name="Specification-Vendor" value="KanMeiZhi Group" />
			</manifest>
		</jar>
		<delete dir="${class.dir}" />
	</target>

	<!-- l1jconfig 封装成 jar -->
	<target name="封装jar(l1jconfig)">
		<jar basedir="${class.dir}" jarfile="${l1jconfig.jar.file}">
			<manifest>
				<attribute name="Class-Path" value="${mf.classpath}" />
				<attribute name="Main-Class" value="com.lineage.config.tool.ServerConfig" />
				<attribute name="Created-By" value="KanMeiZhi Group" />
				<attribute name="Specification-Title" value="Lineage" />
				<attribute name="Specification-Vendor" value="KanMeiZhi Group" />
			</manifest>
		</jar>
		<delete dir="${class.dir}" />
	</target>

	<!-- Loader 封装成 jar -->
	<target name="封装jar(loader)">
		<delete dir="${loader.jar.file}" />
		<tstamp>
			<format property="build.tstamp" pattern="yyyy/MM/dd HH:mm" />
		</tstamp>
		<jar basedir="${class.dir}" jarfile="${loader.jar.file}">
			<manifest>
				<attribute name="Built-Time" value="${build.tstamp}" />
				<attribute name="Main-Class" value="l1j.loader.StartLoader" />
				<attribute name="Created-By" value="Lineage - jrwz" />
			</manifest>
		</jar>
		<delete dir="${class.dir}" />
	</target>

	<!-- 复制 c3p0 的设定档到 class 根目录 -->
	<target name="复制c3p0_config">
		<copy todir="${class.dir}" file="${etc.dir}/c3p0-config.xml" overwrite="true" />
	</target>

	<!-- 复制 log4j 的设定档到 class 根目录 -->
	<target name="复制log4j">
		<copy todir="${class.dir}" file="log4j.properties" overwrite="true" />
	</target>
</project>
